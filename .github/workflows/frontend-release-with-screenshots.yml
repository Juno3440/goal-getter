name: Frontend Release with Screenshot Approval

on:
  push:
    branches: [develop]
    paths: ['web/**']
  pull_request:
    branches: [main]
    paths: ['web/**']

permissions:
  issues: write
  contents: read
  deployments: write

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
      
      - name: Install dependencies
        run: |
          cd web
          npm ci
      
      - name: Run tests
        run: |
          cd web
          npm run lint
          npm run type-check
          npm run test -- --run
          npm run build

  deploy-preview:
    needs: test-and-build
    runs-on: ubuntu-latest
    outputs:
      preview-url: ${{ steps.deploy.outputs.preview-url }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to Vercel Preview
        id: deploy
        uses: amondnet/vercel-action@v25.2.0
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          github-comment: false  # We'll handle comments manually
          scope: ${{ secrets.VERCEL_ORG_ID }}

  screenshot-approval:
    needs: deploy-preview
    runs-on: ubuntu-latest
    steps:
      - name: Wait for Screenshot Approval
        uses: trstringer/manual-approval@v1
        timeout-minutes: 60
        with:
          secret: ${{ github.TOKEN }}
          approvers: ${{ github.actor }}  # The person who pushed gets to approve
          minimum-approvals: 1
          issue-title: "üñºÔ∏è Screenshot Review Required - Frontend Changes"
          issue-body: |
            ## Frontend Changes Ready for Review! 
            
            **Preview URL:** ${{ needs.deploy-preview.outputs.preview-url }}
            
            ### üìã Required Screenshots:
            Please take screenshots of the following and paste them in this issue as comments:
            
            - [ ] **Desktop View** (1920x1080)
            - [ ] **Mobile View** (375x812)  
            - [ ] **Tablet View** (768x1024)
            - [ ] **New Features** in action
            - [ ] **Error States** (if applicable)
            - [ ] **Loading States** (if applicable)
            
            ### üß™ Testing Checklist:
            - [ ] Navigation works correctly
            - [ ] Forms submit properly
            - [ ] Responsive design looks good
            - [ ] No console errors
            - [ ] Accessibility (keyboard navigation)
            
            ### ‚úÖ Approval Process:
            1. Test the preview URL thoroughly
            2. Take screenshots of key views
            3. Paste screenshots as comments below
            4. Comment **"approved"** when satisfied
            
            **Branch:** `${{ github.ref_name }}`
            **Commit:** `${{ github.sha }}`
            **Triggered by:** @${{ github.actor }}

  deploy-production:
    needs: [deploy-preview, screenshot-approval]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to Production
        uses: amondnet/vercel-action@v25.2.0
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          scope: ${{ secrets.VERCEL_ORG_ID }}
          
      - name: Create Release Documentation
        uses: actions/github-script@v7
        with:
          script: |
            const { data: issue } = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ needs.screenshot-approval.outputs.issue-number }}
            });
            
            // Extract screenshots from issue comments and save to release notes
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number
            });
            
            console.log('Screenshots collected and release deployed!'); 