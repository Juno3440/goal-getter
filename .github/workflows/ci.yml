name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_AUDIENCE: authenticated
      GPT_API_KEY: ${{ secrets.GPT_API_KEY }}
      DEFAULT_USER_ID: test-user-id
      FRONTEND_URL: http://localhost:3000
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true
    
    - name: Set up Python environment
      run: |
        uv python install 3.10
        uv venv --python 3.10
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Lint with flake8
      run: |
        uv run flake8 api/ --count --select=E9,F63,F7,F82 --show-source --statistics
        uv run flake8 api/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Format check with black
      run: |
        uv run black --check --diff api/
    
    - name: Import sort check with isort
      run: |
        uv run isort --check-only --diff api/
    
    - name: Type check with mypy
      run: |
        uv run mypy api/ --ignore-missing-imports
    
    - name: Test with pytest
      run: |
        uv run pytest api/tests/ --cov=api --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: backend
        name: backend-coverage
        fail_ci_if_error: false

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
    
    - name: Install dependencies
      run: |
        cd web
        npm ci
    
    - name: Lint
      run: |
        cd web
        npm run lint
    
    - name: Type check
      run: |
        cd web
        npm run type-check
    
    - name: Test
      run: |
        cd web
        npm run test -- --run
    
    - name: Build
      run: |
        cd web
        npm run build