[project]
name = "goal-os-api"
version = "0.1.0"
description = "FastAPI backend for Goal OS application"
authors = [
    {name = "Goal OS Team", email = "team@goal-os.dev"}
]
requires-python = ">=3.10"
dependencies = [
    "fastapi==0.110.0",
    "uvicorn[standard]==0.29.0",
    "python-dotenv==1.0.1",
    "pydantic==2.6.4",
    "uvloop==0.19.0",
    "orjson==3.9.15",
    "supabase>=2,<3",
    "python-jose[cryptography]==3.3.0",
]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.24.0,<0.28.0",
    "pytest-mock>=3.11.0",
    "pytest-cov>=4.1.0",
    "mypy>=1.5.0",
    "flake8>=6.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.3.0",
    "types-requests>=2.32.0.20250602",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=.",
    "--cov-report=xml",
    "--cov-report=term-missing",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "security: Security tests",
    "slow: Slow running tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
strict = false
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
check_untyped_defs = true
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = false
disallow_subclassing_any = false
explicit_package_bases = true

[tool.black]
line-length = 127
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 127
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 127
max-complexity = 10
select = ["E", "F", "W", "C"]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist",
    ".pytest_cache",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
] 
